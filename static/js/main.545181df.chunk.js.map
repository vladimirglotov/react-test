{"version":3,"sources":["redux/types.js","redux/authReducer.js","redux/rootReducer.js","components/HeaderButton.js","components/Header.js","error/error.js","components/Login.js","components/Registration.js","components/Success.js","components/Recovery.js","components/Confirm.js","components/DidNotCome.js","App.js","index.js"],"names":["USER","SET_USER","initialState","name","email","password","rootReducer","combineReducers","user","state","action","type","payload","HeaderButton","path","useLocation","pathname","className","to","Header","src","alt","createError","error","nodeToInsertBefore","errorNode","document","createElement","classList","add","innerHTML","parentNode","insertBefore","removeError","querySelector","removeChild","remove","Login","history","useHistory","button","useRef","placeholder","onChange","current","ref","onClick","value","process","trim","push","Registration","useState","hasPromoCode","setHasPromoCode","promo","test","search","href","Success","Recovery","loader","setLoader","onChangeHandler","submitHandler","setTimeout","window","innerWidth","Confirm","isDesktop","slice","DidNotCome","App","component","exact","store","createStore","app","render","getElementById"],"mappings":"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","file":"static/js/main.545181df.chunk.js","sourcesContent":["export const USER = 'USER'\nexport const SET_USER = 'SET_USER'","import { USER, SET_USER } from \"./types\";\n\nconst initialState = {\n  name: null,\n  email: null,\n  password: null\n}\n\nexport const authReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case USER:\n      return state\n    case SET_USER:\n      return {...state, name: action.payload.name, email: action.payload.email, password: action.payload.name}\n    default: return state\n  }\n}","import {combineReducers} from 'redux';\nimport {authReducer} from './authReducer';\n\nexport const rootReducer = combineReducers({\n  user: authReducer\n})","\nimport React from \"react\";\nimport { Link, useLocation } from \"react-router-dom\";\n\nexport const HeaderButton = () => {\n  const location = useLocation()\n  const path = location.pathname\n\n  if (path === '/') {\n    return (\n      <div className=\"header__buttons\">\n        <span>У вас нет аккаунта?</span>\n        <Link to=\"/registration\" className=\"header__button\">Регистрация</Link>\n      </div>\n    )  \n  }\n  if (path === '/registration') {\n    return (\n      <div className=\"header__buttons\">\n        <span>Уже есть аккаунт?</span>\n        <Link to=\"/\" className=\"header__button\">Войти</Link>\n      </div>\n    )\n  }\n  if (path === '/confirm' || path === '/didnotcome') {\n    return (\n      <div className=\"header__buttons\">\n        <Link className=\"header__link\" to=\"/\">Выйти</Link>\n      </div>\n    )\n  }\n  return (\n    <div className=\"header__buttons\">\n    </div>\n  )\n}","import React from \"react\";\nimport { HeaderButton } from \"./HeaderButton\";\n\nexport const Header =  () => {\n  return (\n    <div className=\"header\">\n      <img src=\"/react-test/LiveDune.png\" alt=\"logo\" />\n      <HeaderButton />\n    </div>\n  )\n}","// export const createError = (error) => {\n//   const errorNode = document.createElement('div')\n//   errorNode.classList.add('error')\n//   email.current.classList.add('input-error')\n//   password.current.classList.add('input-error')\n//   errorNode.innerHTML = error\n//   button.current.parentNode.insertBefore(errorNode, button.current)\n// }\n\n// export const removeError = () => {\n//   const error = button.current.parentNode.querySelector('.error')\n//   if (error) {\n//     error.parentNode.removeChild(error)\n//     email.current.classList.remove('input-error')\n//     password.current.classList.remove('input-error')\n//   }\n// }\n\nexport const createError = (error, email, password, nodeToInsertBefore) => {\n  const errorNode = document.createElement('div')\n  errorNode.classList.add('error')\n  email.classList.add('input-error')\n  if (password) {\n    password.classList.add('input-error')\n  }\n  errorNode.innerHTML = error\n  nodeToInsertBefore.parentNode.insertBefore(errorNode, nodeToInsertBefore)\n}\n\n export const removeError = (email, password) => {\n  const error = email.parentNode.querySelector('.error')\n  if (error) {\n    error.parentNode.removeChild(error)\n    email.classList.remove('input-error')\n    if (password) {\n      password.classList.remove('input-error')\n    }\n  }\n}","import React from \"react\";\nimport { useRef } from \"react\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { createError, removeError} from '../error/error.js';\n\n\nexport const Login = () => {\n\n  const history = useHistory()\n  const button = useRef(null)\n  const email = useRef(null)\n  const password = useRef(null)\n\n  const submitHandler = () => {\n    removeError(email.current, password.current)\n    if (!email.current.value || !password.current.value) {\n      createError('Введите email, Введите пароль', email.current, password.current, button.current)\n    } else if (email.current.value.trim() === process.env.REACT_APP_EMAIL && password.current.value.trim() === process.env.REACT_APP_PASSWORD) {\n      history.push('/success')\n    } else {\n      createError('Неверный email или пароль', email.current, password.current, button.current)\n    }\n  }\n\n  return (\n    <div className=\"login\">\n      <h1 className=\"login__header\">Войти</h1>\n      <span className=\"login__greeting\">Добро пожаловать, рады видеть вас снова &#128075;</span>\n      <div className=\"login__buttons\">\n        <button><img className=\"login__button-img\" alt=\"button_pic\" src=\"/react-test/Facebook.png\"></img>Войти через Facebook</button>\n        <button><img className=\"login__button-img\" alt=\"button_pic\" src=\"/react-test/Google.png\"></img>Войти через Google</button>\n      </div>\n      <span className=\"login__or\">или</span>\n      <input type=\"text\" placeholder=\"Email\" onChange={() => removeError(email.current, password.current)} ref={email}></input>\n      <input type=\"text\" placeholder=\"Пароль\" onChange={() => removeError(email.current, password.current)} ref={password}></input>\n      <button ref={button} onClick={submitHandler} className=\"login__submit\">Войти в аккаунт</button>\n      <Link to=\"/recovery\" className=\"login__forget\">Забыли пароль?</Link>\n    </div>\n  )\n}","import React from \"react\";\nimport { useRef } from \"react\"\nimport { useState } from \"react\"\nimport { useHistory } from \"react-router-dom\"\nimport { createError, removeError } from \"../error/error\"\n\n\nexport const Registration = () => {\n  const history = useHistory()\n  const [hasPromoCode, setHasPromoCode] = useState(false)\n  \n  const name = useRef(null)\n  const email = useRef(null)\n  const promo = useRef(null)\n  const password = useRef(null)\n\n  const submitHandler = () => {\n    const re = /^((([0-9A-Za-z]{1}[-0-9A-z\\.]{1,}[0-9A-Za-z]{1})|([0-9А-Яа-я]{1}[-0-9А-я\\.]{1,}[0-9А-Яа-я]{1}))@([-A-Za-z]{1,}\\.){1,2}[-A-Za-z]{2,})$/u\n    if (re.test(email.current.value.trim())) {\n     history.push({pathname:'/confirm', search: name.current.value.trim()})\n    } else {\n      createError('Возможно вы ошиблись в указании почтового сервиса', email.current, null, password.current)\n    }\n  }\n\n  return (\n    <div className=\"registration\">\n      <h1 className=\"registration__header\">Регистрация</h1>\n      <span className=\"registration__info\">Зарегистрируйся и получи доступ к аналитике аккаунтов.</span>\n      <div className=\"registration__buttons\">\n        <button><img alt=\"button_pic\" src=\"/react-test/Facebook.png\"></img>Войти через Facebook</button>\n        <button><img alt=\"button_pic\" src=\"/react-test/Google.png\"></img>Войти через Google</button>\n      </div>\n      <div className=\"registration__or\">или</div>\n      <input ref={name} type=\"text\" placeholder=\"Имя\"></input>\n      <input type=\"text\" onChange={() => removeError(email.current, null)} ref={email} placeholder=\"Email\" ></input>\n      <input ref={password} type=\"password\" placeholder=\"Пароль\"></input>\n      {hasPromoCode ?\n        <input type=\"text\" placeholder=\"Промокод\" ref={promo}></input>\n        :\n        <div className=\"registration__has-promo\" onClick={() => setHasPromoCode(true)}>У меня есть промокод</div>\n      }\n      <button onClick={submitHandler} className=\"registration__submit\">Создать аккаунт</button>\n      <span className=\"registration__agreement\">Создавая аккаунт, я согласен с <a href=\"#\">условиями оферты </a></span>\n    </div>\n  )\n}","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nexport const Success =  () => {\n\n  return (\n    <div className=\"success\">\n      <img className=\"success__message\" alt=\"message_pic\" src=\"/react-test/message.png\"></img>\n      <h2 className=\"success__header\">Письмо отправлено</h2>\n      <span className=\"success__info\">На указанный вами e-mail было отправлено письмо для смены пароля</span>\n      <Link to=\"/\" className=\"success__submit\">Вернуться на главную</Link>\n    </div>\n  )\n}","import React from \"react\";\nimport { useRef, useState } from \"react\"\nimport { Link, useHistory } from \"react-router-dom\"\nimport { createError, removeError } from \"../error/error\"\n\nexport const Recovery = () => {\n  const email = useRef(null)\n  const button = useRef(null)\n  const history = useHistory()\n  const [loader, setLoader] = useState(false)\n  const isDesktop = window.innerWidth > 600\n\n  const onChangeHandler = () => {\n    removeError(email.current)\n  }\n\n  const submitHandler = () => {\n    removeError(email.current)\n    setLoader(true)\n    setTimeout(() => {\n      if (email.current.value.trim() === 'example@example.com') {\n        history.push('/success')\n      } else {\n        createError('Такой email не зарегистрирован.', email.current, null, button.current)\n      }\n      setLoader(false)\n    }, 1000)\n  }\n  if (isDesktop) {\n    return (\n      <div className=\"recovery\">\n        <img className=\"recovery__lock\" alt=\"lock_pic\" src=\"/react-test/Lock.png\"></img>\n        <h2 className=\"recovery__header\">Восстановить пароль</h2>\n        <span className=\"recovery__info\">Введите email, на который регистрировались ранее</span>\n        <input ref={email} onChange={onChangeHandler} className=\"recovery__input\" type=\"text\"></input>\n        {loader ?\n          <button ref={button} onClick={submitHandler} className=\"recovery__submit\"><img className=\"rot\" alt=\"loader_pic\" src=\"/react-test/loader.png\"></img>Отправка</button>\n          :\n          <button ref={button} onClick={submitHandler} className=\"recovery__submit\">Отправить</button>\n        }\n        <Link className=\"recovery__cancel\" to=\"/\">Отменить</Link>\n      </div>\n    )\n  }\n  \n  return (\n    <div className=\"recovery\">\n      <img className=\"recovery__lock\" alt=\"lock_pic\" src=\"./Lock.png\"></img>\n      <h2 className=\"recovery__header\">Восстановить пароль</h2>\n      <span className=\"recovery__info\">Введите email, на который регистрировались ранее</span>\n      <input ref={email} placeholder=\"Email\" onChange={onChangeHandler} className=\"recovery__input\" type=\"text\"></input>\n        <button ref={button} onClick={submitHandler} className=\"recovery__submit\">Восстановить пароль</button>\n      <Link className=\"recovery__cancel\" to=\"/\">Отменить</Link>\n    </div>\n  )\n}","import React from \"react\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport { createStore } from \"redux\";\nimport { rootReducer } from '../redux/rootReducer';\n\n\nexport const Confirm = () => {\n  const isDesktop = window.innerWidth > 600\n  const location = useLocation()\n  let name = location.search.slice(1)\n  return (\n    <div className=\"confirm\">\n      <span className=\"confirm__header\">Подтвердите ваш e-mail</span>\n      {isDesktop ?\n        <div className=\"confirm__info\">{name}, на ваш E-mail отправлено письмо со ссылкой для <br/> подтверждения. Перейдите по ней, чтобы активировать вашу учетную запись и получить 7 дней бесплатного доступа.</div>\n        :\n        <div className=\"confirm__info\">{name}, на ваш E-mail отправлено письмо со ссылкой для подтверждения. Перейдите по ней, чтобы активировать вашу учетную запись и получить 7 дней бесплатного доступа.</div>\n      }\n      <button className=\"confirm__submit\">Перейти к почте</button>\n      <Link className=\"confirm__not-come\" to=\"/didnotcome\">Мне не пришло письмо</Link>\n    </div>\n  )\n}","import React from \"react\";\nimport { Link } from \"react-router-dom\"\n\nexport const DidNotCome = () => {\n\n  return (\n    <div className=\"didnotcome\">\n      <h1 className=\"didnotcome__header\">Мне не пришло письмо</h1>\n      <span className=\"didnotcome__info\">Письмо может прийти с задержкой в 5-10 минут.<br/>\nТакже проверьте разные папки почтового ящика (актуально для gmail.com) и папку \"Спам\".Если письмо все же не пришло, повторите попытку или напишите об этом в тех.поддержку <a className=\"didnotcome__link\" href=\"#\">support@livedune.ru</a> и мы активируем ваш аккаунт.</span>\n      <input type=\"text\" placeholder=\"Email\"></input>\n      <button className=\"didnotcome__submit\">Отправить заново</button>\n      <Link className=\"didnotcome__cancel\" to=\"/\">Отменить</Link>\n    </div>\n  )\n}","import React from \"react\";\nimport { BrowserRouter, Switch, Route, Redirect } from \"react-router-dom\";\nimport { Header } from \"./components/Header\";\nimport { Login } from \"./components/Login\";\nimport { Registration } from './components/Registration'\nimport { Success } from './components/Success';\nimport { Recovery } from './components/Recovery';\nimport { Confirm } from './components/Confirm'; \nimport { DidNotCome } from './components/DidNotCome';\n\nfunction App() {\n\n  return (\n    <div className=\"App\">\n      <BrowserRouter>\n        <Header />\n          <Switch>\n              <Route component={Login} path=\"/\" exact />\n              <Route component={Registration} path=\"/registration\" />\n              <Route component={Confirm} path=\"/confirm\" />\n              <Route component={Recovery} path=\"/recovery\" />\n              <Route component={DidNotCome} path=\"/didnotcome\" />\n              <Route component={Success} path=\"/success\" />\n              <Redirect to=\"/\" />\n          </Switch>\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport { render } from 'react-dom';\nimport { createStore } from 'redux';\nimport { Provider } from 'react-redux'\nimport { rootReducer } from './redux/rootReducer';\nimport './index.scss';\nimport App from './App';\n\nconst store = createStore(rootReducer)\nconst app = (\n  <Provider store={store}>\n    <App />\n  </Provider >\n)\n\nrender(\n  app,\n  document.getElementById('root')\n);"],"sourceRoot":""}